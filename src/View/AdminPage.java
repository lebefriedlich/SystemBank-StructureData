/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import Util.StructureData;
import controller.AdminController;
import controller.TransactionController;
import java.awt.event.KeyEvent;
import java.text.NumberFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.AdminModel;
import model.TransactionModel;

/**
 *
 * @author HP
 */
public class AdminPage extends javax.swing.JFrame {

    TransactionModel TM = new TransactionModel();
    TransactionController TC = new TransactionController();
    AdminModel AM = new AdminModel();
    AdminController AC = new AdminController();
    StructureData SD = new StructureData();

    private DefaultTableModel tabMode;
    private String notif, notif1;
    NumberFormat formatRp = NumberFormat.getCurrencyInstance(new Locale("in", "ID"));
    ArrayList<String[]> dataNasabah;
    ArrayList<String[]> dataTransaction;

    /**
     * Creates new form LoginPage
     */
    public AdminPage() {
        if ("Active".equals(TM.getStatusLogin())) {
            initComponents();
            tampil_datauser();
            tampil_transaksi();
            tf_noRek.setEditable(false);
            tf_status.setEditable(false);
            tf_nom.setEditable(false);
            tab_data.setEnabled(false);
            tab_aktifitas.setEnabled(false);
        } else {
            dispose();
            LoginPage LP = new LoginPage();
            LP.setVisible(true);
        }
    }

    public void tampil_datauser() {
        tabMode = (DefaultTableModel) tab_data.getModel();
        tab_data.setAutoResizeMode(tab_data.AUTO_RESIZE_OFF);
        tab_data.getColumnModel().getColumn(0).setPreferredWidth(100);
        tab_data.getColumnModel().getColumn(1).setPreferredWidth(245);
        tab_data.getColumnModel().getColumn(2).setPreferredWidth(75);
        tab_data.getColumnModel().getColumn(3).setPreferredWidth(95);
        tab_data.getColumnModel().getColumn(4).setPreferredWidth(95);
        tab_data.getColumnModel().getColumn(5).setPreferredWidth(200);
        tab_data.getColumnModel().getColumn(6).setPreferredWidth(115);
        tab_data.setModel(tabMode);
        tabMode.setRowCount(0);
        AC.viewAllNasabah();
        dataNasabah = AM.getDataNasabah();
        try {
            for (String[] rowData : dataNasabah) {
                rowData[6] = formatRp.format(Double.parseDouble(rowData[6]));
                tabMode.addRow(rowData);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void tampil_transaksi() {
        tabMode = (DefaultTableModel) tab_aktifitas.getModel();
        tab_aktifitas.setAutoResizeMode(tab_data.AUTO_RESIZE_OFF);
        tab_aktifitas.getColumnModel().getColumn(0).setPreferredWidth(140);
        tab_aktifitas.getColumnModel().getColumn(1).setPreferredWidth(120);
        tab_aktifitas.getColumnModel().getColumn(2).setPreferredWidth(245);
        tab_aktifitas.getColumnModel().getColumn(3).setPreferredWidth(125);
        tab_aktifitas.getColumnModel().getColumn(4).setPreferredWidth(155);
        tab_aktifitas.getColumnModel().getColumn(5).setPreferredWidth(140);
        tab_aktifitas.setModel(tabMode);
        tabMode.setRowCount(0);
        AC.viewAllTransactionNasabah();
        dataTransaction = AM.getDataTransaction();
        try {
            for (String[] rowData : dataTransaction) {
                rowData[4] = formatRp.format(Double.parseDouble(rowData[4]));
                tabMode.addRow(rowData);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void reset() {
        tf_noRek.setText("");
        tf_namaLengkap.setText("");
        tf_username.setText("");
        tf_password.setText("");
        tf_noTelp.setText("");
        tf_email.setText("");
        tf_saldo.setText("");
        tf_nominal.setText("");
        tf_status.setText("");
        tf_rek1.setText("");
        tf_rekTuj.setText("");
        tf_nom.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tf_noRek = new javax.swing.JTextField();
        tf_namaLengkap = new javax.swing.JTextField();
        tf_username = new javax.swing.JTextField();
        tf_password = new javax.swing.JTextField();
        tf_noTelp = new javax.swing.JTextField();
        tf_email = new javax.swing.JTextField();
        tf_saldo = new javax.swing.JTextField();
        tf_status = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tab_data = new javax.swing.JTable();
        bt_register = new javax.swing.JButton();
        bt_edit = new javax.swing.JButton();
        bt_activeOrNon = new javax.swing.JButton();
        bt_reset = new javax.swing.JButton();
        bt_delete = new javax.swing.JButton();
        bt_tampilAktifitas = new javax.swing.JButton();
        tf_nominal = new javax.swing.JTextField();
        bt_tarTun = new javax.swing.JButton();
        bt_setTun = new javax.swing.JButton();
        tf_rek1 = new javax.swing.JTextField();
        tf_rekTuj = new javax.swing.JTextField();
        tf_nom = new javax.swing.JTextField();
        bt_transfer = new javax.swing.JButton();
        tf_pencarian = new javax.swing.JTextField();
        cb_sorting = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tab_aktifitas = new javax.swing.JTable();
        lbl_exit = new javax.swing.JLabel();
        lbl_background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(tf_noRek, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, 180, 23));
        getContentPane().add(tf_namaLengkap, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 180, 23));
        getContentPane().add(tf_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, 180, 23));
        getContentPane().add(tf_password, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 180, 23));
        getContentPane().add(tf_noTelp, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 220, 180, 23));
        getContentPane().add(tf_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 250, 180, 23));
        getContentPane().add(tf_saldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 280, 180, 23));
        getContentPane().add(tf_status, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 310, 180, 23));

        jScrollPane2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tab_data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No Rekening", "Full Name", "Username", "Password", "Phone Number", "Email", "Balance"
            }
        ));
        tab_data.setRowHeight(35);
        tab_data.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab_dataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tab_data);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, 950, 280));

        bt_register.setBackground(new java.awt.Color(171, 237, 216));
        bt_register.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bt_register.setForeground(new java.awt.Color(72, 70, 109));
        bt_register.setText("Register");
        bt_register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_registerActionPerformed(evt);
            }
        });
        getContentPane().add(bt_register, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, 80, -1));

        bt_edit.setBackground(new java.awt.Color(171, 237, 216));
        bt_edit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bt_edit.setForeground(new java.awt.Color(72, 70, 109));
        bt_edit.setText("Edit");
        bt_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_editActionPerformed(evt);
            }
        });
        getContentPane().add(bt_edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 340, -1, -1));

        bt_activeOrNon.setBackground(new java.awt.Color(171, 237, 216));
        bt_activeOrNon.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bt_activeOrNon.setForeground(new java.awt.Color(72, 70, 109));
        bt_activeOrNon.setText("Active / Non Active");
        bt_activeOrNon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_activeOrNonActionPerformed(evt);
            }
        });
        getContentPane().add(bt_activeOrNon, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 340, -1, -1));

        bt_reset.setBackground(new java.awt.Color(171, 237, 216));
        bt_reset.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bt_reset.setForeground(new java.awt.Color(72, 70, 109));
        bt_reset.setText("Reset");
        bt_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_resetActionPerformed(evt);
            }
        });
        getContentPane().add(bt_reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 370, 80, -1));

        bt_delete.setBackground(new java.awt.Color(171, 237, 216));
        bt_delete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bt_delete.setForeground(new java.awt.Color(72, 70, 109));
        bt_delete.setText("Delete");
        bt_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_deleteActionPerformed(evt);
            }
        });
        getContentPane().add(bt_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 370, 80, -1));

        bt_tampilAktifitas.setBackground(new java.awt.Color(171, 237, 216));
        bt_tampilAktifitas.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bt_tampilAktifitas.setForeground(new java.awt.Color(72, 70, 109));
        bt_tampilAktifitas.setText("Show Activities");
        bt_tampilAktifitas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_tampilAktifitasActionPerformed(evt);
            }
        });
        getContentPane().add(bt_tampilAktifitas, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 370, 120, -1));
        getContentPane().add(tf_nominal, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 440, 180, 23));

        bt_tarTun.setBackground(new java.awt.Color(171, 237, 216));
        bt_tarTun.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bt_tarTun.setForeground(new java.awt.Color(72, 70, 109));
        bt_tarTun.setText("Cash Withdrawal");
        bt_tarTun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_tarTunActionPerformed(evt);
            }
        });
        getContentPane().add(bt_tarTun, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 470, 130, -1));

        bt_setTun.setBackground(new java.awt.Color(171, 237, 216));
        bt_setTun.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bt_setTun.setForeground(new java.awt.Color(72, 70, 109));
        bt_setTun.setText("Cash Deposit");
        bt_setTun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_setTunActionPerformed(evt);
            }
        });
        getContentPane().add(bt_setTun, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 470, 110, -1));
        getContentPane().add(tf_rek1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 540, 180, 23));

        tf_rekTuj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_rekTujActionPerformed(evt);
            }
        });
        getContentPane().add(tf_rekTuj, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 570, 180, 23));
        getContentPane().add(tf_nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 600, 180, 23));

        bt_transfer.setBackground(new java.awt.Color(171, 237, 216));
        bt_transfer.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        bt_transfer.setForeground(new java.awt.Color(72, 70, 109));
        bt_transfer.setText("Transfer");
        bt_transfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_transferActionPerformed(evt);
            }
        });
        getContentPane().add(bt_transfer, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 630, 80, -1));

        tf_pencarian.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tf_pencarianKeyPressed(evt);
            }
        });
        getContentPane().add(tf_pencarian, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 80, 190, -1));

        cb_sorting.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default", "Nomor Rekening", "Nama" }));
        cb_sorting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_sortingActionPerformed(evt);
            }
        });
        getContentPane().add(cb_sorting, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 80, -1, -1));

        tab_aktifitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Transaction time", "Account number", "Customer Name", "Transaction Type", "Amount Transaction", "Status"
            }
        ));
        tab_aktifitas.setRowHeight(25);
        jScrollPane1.setViewportView(tab_aktifitas);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 440, 950, 210));

        lbl_exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_exitMouseClicked(evt);
            }
        });
        getContentPane().add(lbl_exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 30, 80, 40));

        lbl_background.setBackground(new java.awt.Color(65, 163, 184));
        lbl_background.setIcon(new javax.swing.ImageIcon("C:\\Users\\HP\\OneDrive\\Documents\\SystemBank-StructureData\\images\\background\\Admin Page.png")); // NOI18N
        getContentPane().add(lbl_background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tab_dataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab_dataMouseClicked
        try {
            int row = tab_data.rowAtPoint(evt.getPoint());
            String noRek = tab_data.getValueAt(row, 0).toString();
            String namaLengkap = tab_data.getValueAt(row, 1).toString();
            String username = tab_data.getValueAt(row, 2).toString();
            String pass = tab_data.getValueAt(row, 3).toString();
            String noTelp = tab_data.getValueAt(row, 4).toString();
            String email = tab_data.getValueAt(row, 5).toString();
            String saldo = tab_data.getValueAt(row, 6).toString();
            AC.getStatus(username);
            tf_noRek.setText(noRek);
            tf_namaLengkap.setText(namaLengkap);
            tf_username.setText(username);
            tf_password.setText(pass);
            tf_noTelp.setText(noTelp);
            tf_email.setText(email);
            tf_saldo.setText(saldo);
            tf_status.setText(AM.getStatusNasabah());
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_tab_dataMouseClicked

    private void bt_registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_registerActionPerformed
        notif = TC.register(tf_namaLengkap.getText(), tf_username.getText(), tf_password.getText(), tf_noTelp.getText(), tf_email.getText(), tf_saldo.getText(), "2");
        JOptionPane.showMessageDialog(null, notif, "Informasi", JOptionPane.INFORMATION_MESSAGE);
        tampil_datauser();
        tampil_transaksi();
        if ("Daftar Berhasil".equals(notif)) {
            reset();
        }
    }//GEN-LAST:event_bt_registerActionPerformed

    private void bt_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_editActionPerformed
        if (tf_noRek.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Data belum diisi", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        notif = AC.editData(tf_username.getText(), tf_password.getText(), tf_noTelp.getText(), tf_email.getText(), tf_namaLengkap.getText());
        JOptionPane.showMessageDialog(null, notif, "Informasi", JOptionPane.INFORMATION_MESSAGE);
        tampil_datauser();
        if ("Data Berhasil Dirubah".equals(notif)) {
            reset();
        }
    }//GEN-LAST:event_bt_editActionPerformed

    private void bt_activeOrNonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_activeOrNonActionPerformed
        int pilihan = 0;
        if (tf_noRek.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Data belum diisi", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            return;
        }  else if (tf_status.getText().equals("Active")) {
            pilihan = JOptionPane.showConfirmDialog(null, "Apakah Data Nasabah Dinon-aktifkan?", "Informasi", JOptionPane.YES_NO_OPTION);
        } else {
            pilihan = JOptionPane.showConfirmDialog(null, "Apakah Data Nasabah Diaktifkan?", "Informasi", JOptionPane.YES_NO_OPTION);
        }
        if (pilihan == JOptionPane.YES_OPTION) {
            if (tf_status.getText().equals("Active")) {
                notif = AC.activeOrNon(tf_username.getText(), "Non Active");
            } else {
                notif = AC.activeOrNon(tf_username.getText(), "Active");
            }
            JOptionPane.showMessageDialog(null, notif, "Informasi", JOptionPane.INFORMATION_MESSAGE);
            tampil_datauser();
            reset();
        }
    }//GEN-LAST:event_bt_activeOrNonActionPerformed

    private void bt_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_resetActionPerformed
        reset();
        tampil_transaksi();
    }//GEN-LAST:event_bt_resetActionPerformed

    private void bt_tampilAktifitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_tampilAktifitasActionPerformed
        if (tf_username.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Data belum diisi", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            return;
        }        
        tabMode = (DefaultTableModel) tab_aktifitas.getModel();
        tab_aktifitas.setModel(tabMode);
        tabMode.setRowCount(0);
        AC.viewTransactionNasabah(tf_noRek.getText());
        dataTransaction = AM.getDataTransaction();
        try {
            for (String[] rowData : dataTransaction) {
                rowData[4] = formatRp.format(Double.parseDouble(rowData[4]));
                tabMode.addRow(rowData);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_bt_tampilAktifitasActionPerformed

    private void bt_tarTunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_tarTunActionPerformed
        if (tf_noRek.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Data belum diisi", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String saldo = tf_saldo.getText().replace("Rp", "").replace(".", "").replace(",00", "");
        String nom = tf_nominal.getText().replace("Rp", "").replace(".", "").replace(",00", "");
        if (Integer.parseInt(saldo) > Integer.parseInt(nom)) {
            notif = TC.minusSaldo(tf_noRek.getText(), nom, "Tarik Tunai", "Berhasil");
            JOptionPane.showMessageDialog(null, notif, "Informasi", JOptionPane.INFORMATION_MESSAGE);
            tampil_datauser();
            reset();
        } else {
            JOptionPane.showMessageDialog(null, "Saldo Anda Tidak Mencukupi", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_bt_tarTunActionPerformed

    private void bt_setTunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_setTunActionPerformed
        if (tf_noRek.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Data belum diisi", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String nom = tf_nominal.getText().replace("Rp", "").replace(".", "").replace(",00", "");
        notif = TC.plusSaldo(tf_noRek.getText(), nom, "Setor Tunai", "Berhasil");
        JOptionPane.showMessageDialog(null, notif, "Informasi", JOptionPane.INFORMATION_MESSAGE);
        tampil_datauser();
        reset();
    }//GEN-LAST:event_bt_setTunActionPerformed

    private void tf_rekTujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_rekTujActionPerformed
        if (tf_rekTuj.getText().trim().equals(tf_rek1.getText())) {
            JOptionPane.showMessageDialog(null, "Maaf Tidak Bisa Transfer ke Rekening Sendiri");
            tf_nom.setEditable(false);
        } else {
            String namaLengkap = null;
            for (String[] rowData : dataNasabah) {
                if (rowData[0].equals(tf_rekTuj.getText())) {
                    namaLengkap = rowData[1];
                    break;
                }
            }
            if (namaLengkap == null) {
                JOptionPane.showMessageDialog(null, "Data Tidak Ditemukan");
                tf_nom.setEditable(false);
                tf_rekTuj.requestFocus();
            } else {
                tf_nom.setEditable(true);
                int pilihan = JOptionPane.showConfirmDialog(null, "Apakah anda transfer ke atas nama\n" + namaLengkap, "Transfer", JOptionPane.YES_NO_OPTION);
                if (pilihan == JOptionPane.YES_OPTION) {
                    tf_nom.setEditable(true);
                    tf_nom.requestFocus();
                } else {
                    tf_rekTuj.setText("");
                }
            }
        }
    }//GEN-LAST:event_tf_rekTujActionPerformed

    private void bt_transferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_transferActionPerformed
        if (tf_rek1.getText().isEmpty() && tf_rekTuj.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Data belum diisi", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String nom = tf_nom.getText().replace(".", "").replace(",00", "");
        String saldo = null;
        for (String[] rowData : dataNasabah) {
            if (rowData[0].equals(tf_rek1.getText())) {
                saldo = rowData[rowData.length - 2].replace("Rp", "").replace(".", "").replace(",00", "");
                break;
            }
        }
        if (Integer.parseInt(saldo) > Integer.parseInt(nom)) {
            notif = TC.minusSaldo(tf_rek1.getText(), nom, "Transfer Keluar", ("ke " + tf_rekTuj.getText())).replace("Keluar", "");
            notif1 = TC.plusSaldo(tf_rekTuj.getText(), nom, "Transfer Masuk", "dari " + tf_rek1.getText());
            JOptionPane.showMessageDialog(null, notif, "Informasi", JOptionPane.INFORMATION_MESSAGE);
            reset();
            tampil_datauser();
            tf_nom.setEditable(false);
        } else {
            JOptionPane.showMessageDialog(null, "Saldo Nasabah Tidak Mencukupi", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_bt_transferActionPerformed

    private void tf_pencarianKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_pencarianKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (tf_pencarian.getText().trim().equals("")) {
                JOptionPane.showMessageDialog(null, "Maaf, Data pencarian belum diisi !");
                tf_pencarian.requestFocus();
            } else {
                try {
                    String[] data = new String[8];
                    if (isNumeric(tf_pencarian.getText())) {
                        if (Long.parseLong(tf_pencarian.getText()) > 19210204000000L) {
                            data = SD.binarySearchByAccountNumber(dataNasabah, tf_pencarian.getText());
                        } else {
                            JOptionPane.showMessageDialog(null, "Masukkan Nomor Rekening atau Nama", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                        }
                    } else {
                        data = SD.binarySearchByName(dataNasabah, tf_pencarian.getText());
                    }
                    tabMode = (DefaultTableModel) tab_data.getModel();
                    tab_data.setModel(tabMode);
                    tabMode.setRowCount(0);
                    if (data == null) {
                        JOptionPane.showMessageDialog(null, "Data Nasabah Tidak Ditemukan", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        tabMode.addRow(data);
                    }
                } catch (Exception e) {
                    System.out.println(e);
                }
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_CONTROL) {
            tampil_datauser();
        }
    }//GEN-LAST:event_tf_pencarianKeyPressed

    private void cb_sortingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_sortingActionPerformed
        String selectedOption = (String) cb_sorting.getSelectedItem();
        if ("Default".equals(selectedOption)) {
            tampil_datauser();
        } else if ("Nomor Rekening".equals(selectedOption)) {
            SD.bubbleSortByAccountNumber(dataNasabah);
            tabMode = (DefaultTableModel) tab_data.getModel();
            tab_data.setModel(tabMode);
            tab_data.setRowHeight(35);
            tabMode.setRowCount(0);
            dataNasabah = AM.getDataNasabah();
            for (String[] rowData : dataNasabah) {
                tabMode.addRow(rowData);
            }
        } else if ("Nama".equals(selectedOption)) {
            SD.bubbleSortByName(dataNasabah);
            tabMode = (DefaultTableModel) tab_data.getModel();
            tab_data.setModel(tabMode);
            tab_data.setRowHeight(35);
            tabMode.setRowCount(0);
            dataNasabah = AM.getDataNasabah();
            for (String[] rowData : dataNasabah) {
                tabMode.addRow(rowData);
            }
        }
    }//GEN-LAST:event_cb_sortingActionPerformed

    private void lbl_exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_exitMouseClicked
        int pilihan = JOptionPane.showConfirmDialog(null, "Apakah anda ingin keluar?", "Keluar", JOptionPane.YES_NO_OPTION);
        if (pilihan == JOptionPane.YES_OPTION) {
            dispose();
            LoginPage LP = new LoginPage();
            LP.setVisible(true);
        }
        TM.setStatusLogin(null);
    }//GEN-LAST:event_lbl_exitMouseClicked

    private void bt_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_deleteActionPerformed
        if (tf_noRek.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Data belum diisi", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        int pilihan = JOptionPane.showConfirmDialog(null, "Apakah Data Nasabah Dihapus?", "Keluar", JOptionPane.YES_NO_OPTION);
            if (pilihan == JOptionPane.YES_OPTION) {
                try {
                    notif = AC.deleteNasabah(tf_noRek.getText());
                    JOptionPane.showMessageDialog(null, notif, "Informasi", JOptionPane.INFORMATION_MESSAGE);
                    tampil_datauser();
                    tampil_transaksi();
                    reset();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Data gagal dihapus", "Informasi", JOptionPane.INFORMATION_MESSAGE);
                }
            }
    }//GEN-LAST:event_bt_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_activeOrNon;
    private javax.swing.JButton bt_delete;
    private javax.swing.JButton bt_edit;
    private javax.swing.JButton bt_register;
    private javax.swing.JButton bt_reset;
    private javax.swing.JButton bt_setTun;
    private javax.swing.JButton bt_tampilAktifitas;
    private javax.swing.JButton bt_tarTun;
    private javax.swing.JButton bt_transfer;
    private javax.swing.JComboBox<String> cb_sorting;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_background;
    private javax.swing.JLabel lbl_exit;
    private javax.swing.JTable tab_aktifitas;
    private javax.swing.JTable tab_data;
    private javax.swing.JTextField tf_email;
    private javax.swing.JTextField tf_namaLengkap;
    private javax.swing.JTextField tf_noRek;
    private javax.swing.JTextField tf_noTelp;
    private javax.swing.JTextField tf_nom;
    private javax.swing.JTextField tf_nominal;
    private javax.swing.JTextField tf_password;
    private javax.swing.JTextField tf_pencarian;
    private javax.swing.JTextField tf_rek1;
    private javax.swing.JTextField tf_rekTuj;
    private javax.swing.JTextField tf_saldo;
    private javax.swing.JTextField tf_status;
    private javax.swing.JTextField tf_username;
    // End of variables declaration//GEN-END:variables

    private boolean isNumeric(String text) {
        try {
            Double.parseDouble(text);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }
}
